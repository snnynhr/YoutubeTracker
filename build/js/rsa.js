(function(k){function f(){return{type:48,children:Array.prototype.slice.call(arguments)}}function m(b,c){function f(e){var c=b.charCodeAt(a++),d;d=b.charCodeAt(a++);if(d&128){var g=d&127;if(2<g||0==g)throw"Unsupported length";for(var l=d=0;l<g;l++)d+=b.charCodeAt(a++)<<8*(g-1-l)}if("type"in e&&e.type!=c)throw"Unexpected type";if("content"in e&&e.content!=b.substr(a,d))throw"Unexpected content";"out"in e&&(h[e.out]=new BigInteger(b.substr(a,d),256));if("children"in e){c=0;for(d=a+d;a<d;c++){if(c>=
e.children.length)throw"Too many children";f(e.children[c])}if(c<e.children.length)throw"Too few children";if(a>d)throw"Children too large";}else if("encapsulates"in e){if(0!=b.charCodeAt(a++))throw"Encapsulation expected";f(e.encapsulates)}else a+=d}var a=0,h={};f(c);if(a!=b.length)throw"Too much data";return h}var n=f(f({type:6,content:"*\u0086H\u0086\u00f7\r\u0001\u0001\u0001"},{}),function(b){return{type:3,encapsulates:b}}(f({type:2,out:"n"},{type:2,out:"e"}))),p=f(f({type:6,content:"+\u000e\u0003\u0002\u001a"},
{}),{type:4,out:"sha1"});k.verifySignature=function(b,c,f){var a;try{a=m(atob(b),n)}catch(h){console.log("Invalid RSA public key: "+h),a=null}if(!a)return!1;a.e=parseInt(a.e.toString(16),16);b=(new BigInteger(atob(c),256)).modPowInt(a.e,a.n).toString(256);try{c=0;if(1!=b.charCodeAt(c++))throw"Wrong padding in signature digest";for(;255==b.charCodeAt(c++););if(0!=b.charCodeAt(c-1))throw"Wrong padding in signature digest";var e=m(b.substr(c),p).sha1,k=new BigInteger(SHA1(f),16);return 0==e.compareTo(k)}catch(d){return console.log("Invalid encrypted signature: "+
d),!1}}})(this);
